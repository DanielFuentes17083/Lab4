

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 17:56:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0013                     _SSPBUF	set	19
   284  0014                     _SSPCON	set	20
   285  0008                     _PORTD	set	8
   286  0006                     _PORTB	set	6
   287  0005                     _PORTA	set	5
   288  0007                     _PORTCbits	set	7
   289  0094                     _SSPSTATbits	set	148
   290  0094                     _SSPSTAT	set	148
   291  0088                     _TRISD	set	136
   292  0086                     _TRISB	set	134
   293  0085                     _TRISA	set	133
   294  043B                     _TRISC3	set	1083
   295  043D                     _TRISC5	set	1085
   296  043A                     _TRISC2	set	1082
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299                           
   300                           ; #config settings
   301  0000                     
   302                           	psect	cinit
   303  07FA                     start_initialization:	
   304  07FA                     __initialization:	
   305                           
   306                           ; Clear objects allocated to COMMON
   307  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   308  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   309  07FC                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  07FC                     __end_of__initialization:	
   313  07FC  0183               	clrf	3
   314  07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317  0076                     __pbssCOMMON:	
   318  0076                     _pot2:	
   319  0076                     	ds	1
   320  0077                     _pot1:	
   321  0077                     	ds	1
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:	
   325  0070                     ?_setup:	
   326  0070                     ?_spiWrite:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ??_spiWrite:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_spiRead:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_spiRead:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_spiInit:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_spiReceiveWait:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_spiReceiveWait:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     spiInit@sDataSample:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     spiWrite@dat:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 1 bytes @ 0x0
   358  0070                     	ds	1
   359  0071                     spiInit@sClockIdle:	
   360                           
   361                           ; 1 bytes @ 0x1
   362  0071                     	ds	1
   363  0072                     spiInit@sTransmitEdge:	
   364                           
   365                           ; 1 bytes @ 0x2
   366  0072                     	ds	1
   367  0073                     ??_spiInit:	
   368  0073                     spiInit@sType:	
   369                           ; 1 bytes @ 0x3
   370                           
   371                           
   372                           ; 1 bytes @ 0x3
   373  0073                     	ds	1
   374  0074                     ??_setup:	
   375  0074                     ??_main:	
   376                           ; 1 bytes @ 0x4
   377                           
   378                           
   379                           ; 1 bytes @ 0x4
   380  0074                     	ds	2
   381                           
   382                           	psect	maintext
   383  07B4                     __pmaintext:	
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 39 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : B00/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0
   406 ;;      Totals:         2       0       0       0       0
   407 ;;Total ram usage:        2 bytes
   408 ;; Hardware stack levels required when called:    2
   409 ;; This function calls:
   410 ;;		_setup
   411 ;;		_spiRead
   412 ;;		_spiWrite
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  07B4                     _main:	
   421  07B4                     l739:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   424                           
   425                           
   426                           ;main.c: 40:     setup();
   427  07B4  120A  118A  279A  120A  118A  	fcall	_setup
   428  07B9                     l741:	
   429                           
   430                           ;main.c: 42:         PORTCbits.RC2 = 0;
   431  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   432  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   433  07BB  1107               	bcf	7,2	;volatile
   434  07BC                     l743:	
   435                           
   436                           ;main.c: 43:         _delay((unsigned long)((1)*(8000000/4000.0)));
   437  07BC  3003               	movlw	3
   438  07BD  00F5               	movwf	??_main+1
   439  07BE  3097               	movlw	151
   440  07BF  00F4               	movwf	??_main
   441  07C0                     u47:	
   442  07C0  0BF4               	decfsz	??_main,f
   443  07C1  2FC0               	goto	u47
   444  07C2  0BF5               	decfsz	??_main+1,f
   445  07C3  2FC0               	goto	u47
   446  07C4  2FC5               	nop2
   447  07C5                     l745:	
   448                           
   449                           ;main.c: 44:         spiWrite(1);
   450  07C5  3001               	movlw	1
   451  07C6  120A  118A  276E  120A  118A  	fcall	_spiWrite
   452  07CB                     l747:	
   453                           
   454                           ;main.c: 45:         pot1 = spiRead();
   455  07CB  120A  118A  277B  120A  118A  	fcall	_spiRead
   456  07D0  00F4               	movwf	??_main
   457  07D1  0874               	movf	??_main,w
   458  07D2  00F7               	movwf	_pot1
   459  07D3                     l749:	
   460                           
   461                           ;main.c: 46:         _delay((unsigned long)((10)*(8000000/4000.0)));
   462  07D3  301A               	movlw	26
   463  07D4  00F5               	movwf	??_main+1
   464  07D5  30F8               	movlw	248
   465  07D6  00F4               	movwf	??_main
   466  07D7                     u57:	
   467  07D7  0BF4               	decfsz	??_main,f
   468  07D8  2FD7               	goto	u57
   469  07D9  0BF5               	decfsz	??_main+1,f
   470  07DA  2FD7               	goto	u57
   471  07DB  0000               	nop
   472                           
   473                           ;main.c: 47:         spiWrite(0);
   474  07DC  3000               	movlw	0
   475  07DD  120A  118A  276E  120A  118A  	fcall	_spiWrite
   476                           
   477                           ;main.c: 48:         pot2 = spiRead();
   478  07E2  120A  118A  277B  120A  118A  	fcall	_spiRead
   479  07E7  00F4               	movwf	??_main
   480  07E8  0874               	movf	??_main,w
   481  07E9  00F6               	movwf	_pot2
   482  07EA                     l751:	
   483                           
   484                           ;main.c: 49:          _delay((unsigned long)((1)*(8000000/4000.0)));
   485  07EA  3003               	movlw	3
   486  07EB  00F5               	movwf	??_main+1
   487  07EC  3097               	movlw	151
   488  07ED  00F4               	movwf	??_main
   489  07EE                     u67:	
   490  07EE  0BF4               	decfsz	??_main,f
   491  07EF  2FEE               	goto	u67
   492  07F0  0BF5               	decfsz	??_main+1,f
   493  07F1  2FEE               	goto	u67
   494  07F2  2FF3               	nop2
   495  07F3                     l753:	
   496                           
   497                           ;main.c: 50:        PORTCbits.RC2 = 1;
   498  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   499  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   500  07F5  1507               	bsf	7,2	;volatile
   501  07F6  2FB9               	goto	l741
   502  07F7  120A  118A  2800   	ljmp	start
   503  07FA                     __end_of_main:	
   504                           
   505                           	psect	text1
   506  076E                     __ptext1:	
   507 ;; *************** function _spiWrite *****************
   508 ;; Defined at:
   509 ;;		line 32 in file "SPI.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  dat             1    wreg     unsigned char 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  dat             1    0[COMMON] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         1       0       0       0       0
   527 ;;Total ram usage:        1 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _spiWrite
   538  076E                     _spiWrite:	
   539                           
   540                           ;incstack = 0
   541                           ; Regs used in _spiWrite: [wreg]
   542                           ;spiWrite@dat stored from wreg
   543  076E  00F0               	movwf	spiWrite@dat
   544  076F                     l691:	
   545                           
   546                           ;SPI.c: 32: void spiWrite(char dat);SPI.c: 33: {;SPI.c: 34:     SSPBUF = dat;
   547  076F  0870               	movf	spiWrite@dat,w
   548  0770  1283               	bcf	3,5	;RP0=0, select bank0
   549  0771  1303               	bcf	3,6	;RP1=0, select bank0
   550  0772  0093               	movwf	19	;volatile
   551  0773                     l71:	
   552  0773  0008               	return
   553  0774                     __end_of_spiWrite:	
   554                           
   555                           	psect	text2
   556  077B                     __ptext2:	
   557 ;; *************** function _spiRead *****************
   558 ;; Defined at:
   559 ;;		line 45 in file "SPI.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      unsigned char 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0, pclath, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    1
   580 ;; This function calls:
   581 ;;		_spiReceiveWait
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _spiRead
   589  077B                     _spiRead:	
   590  077B                     l693:	
   591                           ;incstack = 0
   592                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   593                           
   594                           
   595                           ;SPI.c: 47:     spiReceiveWait();
   596  077B  120A  118A  2774  120A  118A  	fcall	_spiReceiveWait
   597  0780                     l695:	
   598                           
   599                           ;SPI.c: 48:     return(SSPBUF);
   600  0780  1283               	bcf	3,5	;RP0=0, select bank0
   601  0781  1303               	bcf	3,6	;RP1=0, select bank0
   602  0782  0813               	movf	19,w	;volatile
   603  0783                     l79:	
   604  0783  0008               	return
   605  0784                     __end_of_spiRead:	
   606                           
   607                           	psect	text3
   608  0774                     __ptext3:	
   609 ;; *************** function _spiReceiveWait *****************
   610 ;; Defined at:
   611 ;;		line 27 in file "SPI.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		None
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_spiRead
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _spiReceiveWait
   640  0774                     _spiReceiveWait:	
   641  0774                     l681:	
   642                           ;incstack = 0
   643                           ; Regs used in _spiReceiveWait: []
   644                           
   645  0774                     l65:	
   646                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
   647                           
   648  0774  1683               	bsf	3,5	;RP0=1, select bank1
   649  0775  1303               	bcf	3,6	;RP1=0, select bank1
   650  0776  1C14               	btfss	20,0	;volatile
   651  0777  2F79               	goto	u21
   652  0778  2F7A               	goto	u20
   653  0779                     u21:	
   654  0779  2F74               	goto	l65
   655  077A                     u20:	
   656  077A                     l68:	
   657  077A  0008               	return
   658  077B                     __end_of_spiReceiveWait:	
   659                           
   660                           	psect	text4
   661  079A                     __ptext4:	
   662 ;; *************** function _setup *****************
   663 ;; Defined at:
   664 ;;		line 56 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    1
   685 ;; This function calls:
   686 ;;		_spiInit
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _setup
   694  079A                     _setup:	
   695  079A                     l731:	
   696                           ;incstack = 0
   697                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   698                           
   699                           
   700                           ;main.c: 57:     ANSEL = 0;
   701  079A  1683               	bsf	3,5	;RP0=1, select bank3
   702  079B  1703               	bsf	3,6	;RP1=1, select bank3
   703  079C  0188               	clrf	8	;volatile
   704                           
   705                           ;main.c: 58:     ANSELH = 0;
   706  079D  0189               	clrf	9	;volatile
   707  079E                     l733:	
   708                           
   709                           ;main.c: 59:     TRISC2 = 0;
   710  079E  1683               	bsf	3,5	;RP0=1, select bank1
   711  079F  1303               	bcf	3,6	;RP1=0, select bank1
   712  07A0  1107               	bcf	7,2	;volatile
   713                           
   714                           ;main.c: 60:     TRISA = 0;
   715  07A1  0185               	clrf	5	;volatile
   716                           
   717                           ;main.c: 61:     TRISB = 0;
   718  07A2  0186               	clrf	6	;volatile
   719                           
   720                           ;main.c: 62:     TRISD = 0;
   721  07A3  0188               	clrf	8	;volatile
   722                           
   723                           ;main.c: 63:     PORTA = 0;
   724  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   725  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   726  07A6  0185               	clrf	5	;volatile
   727                           
   728                           ;main.c: 64:     PORTB = 0;
   729  07A7  0186               	clrf	6	;volatile
   730                           
   731                           ;main.c: 65:     PORTD = 0;
   732  07A8  0188               	clrf	8	;volatile
   733  07A9                     l735:	
   734                           
   735                           ;main.c: 66:     PORTCbits.RC2 = 1;
   736  07A9  1507               	bsf	7,2	;volatile
   737  07AA                     l737:	
   738                           
   739                           ;main.c: 67:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   740  07AA  01F0               	clrf	spiInit@sDataSample
   741  07AB  01F1               	clrf	spiInit@sClockIdle
   742  07AC  01F2               	clrf	spiInit@sTransmitEdge
   743  07AD  3020               	movlw	32
   744  07AE  120A  118A  2784  120A  118A  	fcall	_spiInit
   745  07B3                     l45:	
   746  07B3  0008               	return
   747  07B4                     __end_of_setup:	
   748                           
   749                           	psect	text5
   750  0784                     __ptext5:	
   751 ;; *************** function _spiInit *****************
   752 ;; Defined at:
   753 ;;		line 10 in file "SPI.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  sType           1    wreg     enum E1264
   756 ;;  sDataSample     1    0[COMMON] enum E1272
   757 ;;  sClockIdle      1    1[COMMON] enum E1276
   758 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  sType           1    3[COMMON] enum E1264
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         3       0       0       0       0
   771 ;;      Locals:         1       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0
   773 ;;      Totals:         4       0       0       0       0
   774 ;;Total ram usage:        4 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_setup
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           
   784                           ;psect for function _spiInit
   785  0784                     _spiInit:	
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   789                           ;spiInit@sType stored from wreg
   790  0784  00F3               	movwf	spiInit@sType
   791  0785                     l721:	
   792                           
   793                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
   794  0785  1683               	bsf	3,5	;RP0=1, select bank1
   795  0786  1303               	bcf	3,6	;RP1=0, select bank1
   796  0787  1287               	bcf	7,5	;volatile
   797                           
   798                           ;SPI.c: 13:     if(sType & 0b00000100)
   799  0788  1D73               	btfss	spiInit@sType,2
   800  0789  2F8B               	goto	u31
   801  078A  2F8C               	goto	u30
   802  078B                     u31:	
   803  078B  2F90               	goto	l727
   804  078C                     u30:	
   805  078C                     l723:	
   806                           
   807                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   808  078C  0872               	movf	spiInit@sTransmitEdge,w
   809  078D  0094               	movwf	20	;volatile
   810  078E                     l725:	
   811                           
   812                           ;SPI.c: 16:         TRISC3 = 1;
   813  078E  1587               	bsf	7,3	;volatile
   814                           
   815                           ;SPI.c: 17:     }
   816  078F  2F94               	goto	l61
   817  0790                     l727:	
   818                           
   819                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   820  0790  0870               	movf	spiInit@sDataSample,w
   821  0791  0472               	iorwf	spiInit@sTransmitEdge,w
   822  0792  0094               	movwf	20	;volatile
   823  0793                     l729:	
   824                           
   825                           ;SPI.c: 21:         TRISC3 = 0;
   826  0793  1187               	bcf	7,3	;volatile
   827  0794                     l61:	
   828                           ;SPI.c: 22:     }
   829                           
   830                           
   831                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   832  0794  0873               	movf	spiInit@sType,w
   833  0795  0471               	iorwf	spiInit@sClockIdle,w
   834  0796  1283               	bcf	3,5	;RP0=0, select bank0
   835  0797  1303               	bcf	3,6	;RP1=0, select bank0
   836  0798  0094               	movwf	20	;volatile
   837  0799                     l62:	
   838  0799  0008               	return
   839  079A                     __end_of_spiInit:	
   840  007E                     btemp	set	126	;btemp
   841  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 17:56:10 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l61 0794  
                      l45 07B3                        l62 0799                        l71 0773  
                      l65 0774                        l68 077A                        l79 0783  
                      u20 077A                        u21 0779                        u30 078C  
                      u31 078B                        u47 07C0                        u57 07D7  
                      u67 07EE                       l721 0785                       l723 078C  
                     l731 079A                       l725 078E                       l733 079E  
                     l741 07B9                       l727 0790                       l735 07A9  
                     l751 07EA                       l743 07BC                       l729 0793  
                     l737 07AA                       l681 0774                       l753 07F3  
                     l745 07C5                       l691 076F                       l747 07CB  
                     l739 07B4                       l693 077B                       l749 07D3  
                     l695 0780              __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 07B4                      _pot1 0077  
                    _pot2 0076                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000                     _setup 079A  
          __CFG_BOREN$OFF 0000           __end_of_spiInit 079A           __end_of_spiRead 0784  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FA              __end_of_main 07FA                    ??_main 0074  
                  ?_setup 0070                    _ANSELH 0189                    _TRISC2 043A  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000          __end_of_spiWrite 0774  
               ??_spiInit 0073                 ??_spiRead 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_setup 07B4                   ??_setup 0074  
              __pmaintext 07B4   __size_of_spiReceiveWait 0007                   _SSPSTAT 0094  
               ?_spiWrite 0070                   __ptext1 076E                   __ptext2 077B  
                 __ptext3 0774                   __ptext4 079A                   __ptext5 0784  
                 _spiInit 0784                   _spiRead 077B      end_of_initialization 07FC  
              ??_spiWrite 0070                 _PORTCbits 0007               spiWrite@dat 0070  
          _spiReceiveWait 0774       start_initialization 07FA  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 077B               __pbssCOMMON 0076                 ___latbits 0002  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_spiInit 0070  
                ?_spiRead 0070            __size_of_setup 001A      spiInit@sTransmitEdge 0072  
      spiInit@sDataSample 0070          __size_of_spiInit 0016          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0046                  _spiWrite 076E  
            spiInit@sType 0073         spiInit@sClockIdle 0071          ??_spiReceiveWait 0070  
