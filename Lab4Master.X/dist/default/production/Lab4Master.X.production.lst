

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 17:32:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0019                     _TXREG	set	25
   366  0018                     _RCSTAbits	set	24
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  0008                     _PORTD	set	8
   370  0005                     _PORTA	set	5
   371  0007                     _PORTCbits	set	7
   372  001A                     _RCREG	set	26
   373  0006                     _PORTB	set	6
   374  000C                     _PIR1bits	set	12
   375  000B                     _INTCONbits	set	11
   376  0099                     _SPBRG	set	153
   377  008C                     _PIE1bits	set	140
   378  0098                     _TXSTAbits	set	152
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  0088                     _TRISD	set	136
   382  0086                     _TRISB	set	134
   383  0085                     _TRISA	set	133
   384  043B                     _TRISC3	set	1083
   385  043D                     _TRISC5	set	1085
   386  043A                     _TRISC2	set	1082
   387  0187                     _BAUDCTLbits	set	391
   388  0189                     _ANSELH	set	393
   389  0188                     _ANSEL	set	392
   390                           
   391                           ; #config settings
   392  0000                     
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395  000F                     __initialization:	
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  0011                     __end_of__initialization:	
   404  0011  0183               	clrf	3
   405  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408  0078                     __pbssCOMMON:	
   409  0078                     _pot2:	
   410  0078                     	ds	1
   411  0079                     _pot1:	
   412  0079                     	ds	1
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:	
   416  0070                     ?_setup:	
   417  0070                     ?_spiWrite:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_spiRead:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_ENVIO:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_ISR:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_ISR:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_spiReceiveWait:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	2
   441  0072                     ?_ComSetup:	
   442  0072                     ??_spiWrite:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     ??_spiRead:	
   446                           ; 1 bytes @ 0x2
   447                           
   448  0072                     ??_ENVIO:	
   449                           ; 1 bytes @ 0x2
   450                           
   451  0072                     ?_spiInit:	
   452                           ; 1 bytes @ 0x2
   453                           
   454  0072                     ??_spiReceiveWait:	
   455                           ; 1 bytes @ 0x2
   456                           
   457  0072                     spiInit@sDataSample:	
   458                           ; 1 bytes @ 0x2
   459                           
   460  0072                     spiWrite@dat:	
   461                           ; 1 bytes @ 0x2
   462                           
   463  0072                     ENVIO@value:	
   464                           ; 1 bytes @ 0x2
   465                           
   466  0072                     ComSetup@BR:	
   467                           ; 1 bytes @ 0x2
   468                           
   469                           
   470                           ; 2 bytes @ 0x2
   471  0072                     	ds	1
   472  0073                     spiInit@sClockIdle:	
   473                           
   474                           ; 1 bytes @ 0x3
   475  0073                     	ds	1
   476  0074                     ??_ComSetup:	
   477  0074                     spiInit@sTransmitEdge:	
   478                           ; 1 bytes @ 0x4
   479                           
   480                           
   481                           ; 1 bytes @ 0x4
   482  0074                     	ds	1
   483  0075                     ??_spiInit:	
   484  0075                     spiInit@sType:	
   485                           ; 1 bytes @ 0x5
   486                           
   487                           
   488                           ; 1 bytes @ 0x5
   489  0075                     	ds	1
   490  0076                     ??_setup:	
   491  0076                     ??_main:	
   492                           ; 1 bytes @ 0x6
   493                           
   494                           
   495                           ; 1 bytes @ 0x6
   496  0076                     	ds	2
   497                           
   498                           	psect	maintext
   499  0015                     __pmaintext:	
   500 ;;
   501 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   502 ;;
   503 ;; *************** function _main *****************
   504 ;; Defined at:
   505 ;;		line 48 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : B00/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0
   521 ;;      Temps:          2       0       0       0       0
   522 ;;      Totals:         2       0       0       0       0
   523 ;;Total ram usage:        2 bytes
   524 ;; Hardware stack levels required when called:    3
   525 ;; This function calls:
   526 ;;		_ComSetup
   527 ;;		_ENVIO
   528 ;;		_setup
   529 ;;		_spiRead
   530 ;;		_spiWrite
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  0015                     _main:	
   539  0015                     l994:	
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   542                           
   543                           
   544                           ;main.c: 49:     setup();
   545  0015  120A  118A  20D0  120A  118A  	fcall	_setup
   546  001A                     l996:	
   547                           
   548                           ;main.c: 50:     ComSetup(9600);
   549  001A  3080               	movlw	128
   550  001B  00F2               	movwf	ComSetup@BR
   551  001C  3025               	movlw	37
   552  001D  00F3               	movwf	ComSetup@BR+1
   553  001E  120A  118A  2082  120A  118A  	fcall	_ComSetup
   554  0023                     l998:	
   555                           
   556                           ;main.c: 52:         PORTCbits.RC2 = 0;
   557  0023  1283               	bcf	3,5	;RP0=0, select bank0
   558  0024  1303               	bcf	3,6	;RP1=0, select bank0
   559  0025  1107               	bcf	7,2	;volatile
   560  0026                     l1000:	
   561                           
   562                           ;main.c: 53:         _delay((unsigned long)((1)*(8000000/4000.0)));
   563  0026  3003               	movlw	3
   564  0027  00F7               	movwf	??_main+1
   565  0028  3097               	movlw	151
   566  0029  00F6               	movwf	??_main
   567  002A                     u67:	
   568  002A  0BF6               	decfsz	??_main,f
   569  002B  282A               	goto	u67
   570  002C  0BF7               	decfsz	??_main+1,f
   571  002D  282A               	goto	u67
   572  002E  282F               	nop2
   573  002F                     l1002:	
   574                           
   575                           ;main.c: 54:         spiWrite(1);
   576  002F  3001               	movlw	1
   577  0030  120A  118A  212F  120A  118A  	fcall	_spiWrite
   578  0035                     l1004:	
   579                           
   580                           ;main.c: 55:         pot1 = spiRead();
   581  0035  120A  118A  211F  120A  118A  	fcall	_spiRead
   582  003A  00F6               	movwf	??_main
   583  003B  0876               	movf	??_main,w
   584  003C  00F9               	movwf	_pot1
   585  003D                     l1006:	
   586                           
   587                           ;main.c: 56:         _delay((unsigned long)((10)*(8000000/4000.0)));
   588  003D  301A               	movlw	26
   589  003E  00F7               	movwf	??_main+1
   590  003F  30F8               	movlw	248
   591  0040  00F6               	movwf	??_main
   592  0041                     u77:	
   593  0041  0BF6               	decfsz	??_main,f
   594  0042  2841               	goto	u77
   595  0043  0BF7               	decfsz	??_main+1,f
   596  0044  2841               	goto	u77
   597  0045  0000               	nop
   598  0046                     l1008:	
   599                           
   600                           ;main.c: 57:         spiWrite(0);
   601  0046  3000               	movlw	0
   602  0047  120A  118A  212F  120A  118A  	fcall	_spiWrite
   603  004C                     l1010:	
   604                           
   605                           ;main.c: 58:         pot2 = spiRead();
   606  004C  120A  118A  211F  120A  118A  	fcall	_spiRead
   607  0051  00F6               	movwf	??_main
   608  0052  0876               	movf	??_main,w
   609  0053  00F8               	movwf	_pot2
   610  0054                     l1012:	
   611                           
   612                           ;main.c: 59:          _delay((unsigned long)((10)*(8000000/4000.0)));
   613  0054  301A               	movlw	26
   614  0055  00F7               	movwf	??_main+1
   615  0056  30F8               	movlw	248
   616  0057  00F6               	movwf	??_main
   617  0058                     u87:	
   618  0058  0BF6               	decfsz	??_main,f
   619  0059  2858               	goto	u87
   620  005A  0BF7               	decfsz	??_main+1,f
   621  005B  2858               	goto	u87
   622  005C  0000               	nop
   623  005D                     l1014:	
   624                           
   625                           ;main.c: 60:        PORTCbits.RC2 = 1;
   626  005D  1283               	bcf	3,5	;RP0=0, select bank0
   627  005E  1303               	bcf	3,6	;RP1=0, select bank0
   628  005F  1507               	bsf	7,2	;volatile
   629  0060                     l1016:	
   630                           
   631                           ;main.c: 61:        ENVIO(pot1);
   632  0060  0879               	movf	_pot1,w
   633  0061  120A  118A  2113  120A  118A  	fcall	_ENVIO
   634  0066                     l1018:	
   635                           
   636                           ;main.c: 62:        _delay((unsigned long)((1)*(8000000/4000.0)));
   637  0066  3003               	movlw	3
   638  0067  00F7               	movwf	??_main+1
   639  0068  3097               	movlw	151
   640  0069  00F6               	movwf	??_main
   641  006A                     u97:	
   642  006A  0BF6               	decfsz	??_main,f
   643  006B  286A               	goto	u97
   644  006C  0BF7               	decfsz	??_main+1,f
   645  006D  286A               	goto	u97
   646  006E  286F               	nop2
   647  006F                     l1020:	
   648                           
   649                           ;main.c: 63:        ENVIO(pot2);
   650  006F  0878               	movf	_pot2,w
   651  0070  120A  118A  2113  120A  118A  	fcall	_ENVIO
   652  0075                     l1022:	
   653                           
   654                           ;main.c: 64:        _delay((unsigned long)((1)*(8000000/4000.0)));
   655  0075  3003               	movlw	3
   656  0076  00F7               	movwf	??_main+1
   657  0077  3097               	movlw	151
   658  0078  00F6               	movwf	??_main
   659  0079                     u107:	
   660  0079  0BF6               	decfsz	??_main,f
   661  007A  2879               	goto	u107
   662  007B  0BF7               	decfsz	??_main+1,f
   663  007C  2879               	goto	u107
   664  007D  287E               	nop2
   665  007E  2823               	goto	l998
   666  007F  120A  118A  280C   	ljmp	start
   667  0082                     __end_of_main:	
   668                           
   669                           	psect	text1
   670  012F                     __ptext1:	
   671 ;; *************** function _spiWrite *****************
   672 ;; Defined at:
   673 ;;		line 33 in file "SPI.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  dat             1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  dat             1    2[COMMON] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         1       0       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _spiWrite
   703  012F                     _spiWrite:	
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _spiWrite: [wreg]
   707                           ;spiWrite@dat stored from wreg
   708  012F  00F2               	movwf	spiWrite@dat
   709  0130                     l780:	
   710                           
   711                           ;SPI.c: 33: void spiWrite(char dat);SPI.c: 34: {;SPI.c: 35:     SSPBUF = dat;
   712  0130  0872               	movf	spiWrite@dat,w
   713  0131  1283               	bcf	3,5	;RP0=0, select bank0
   714  0132  1303               	bcf	3,6	;RP1=0, select bank0
   715  0133  0093               	movwf	19	;volatile
   716  0134                     l87:	
   717  0134  0008               	return
   718  0135                     __end_of_spiWrite:	
   719                           
   720                           	psect	text2
   721  011F                     __ptext2:	
   722 ;; *************** function _spiRead *****************
   723 ;; Defined at:
   724 ;;		line 46 in file "SPI.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      unsigned char 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0, pclath, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    2
   745 ;; This function calls:
   746 ;;		_spiReceiveWait
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _spiRead
   754  011F                     _spiRead:	
   755  011F                     l782:	
   756                           ;incstack = 0
   757                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   758                           
   759                           
   760                           ;SPI.c: 48:     spiReceiveWait();
   761  011F  120A  118A  2128  120A  118A  	fcall	_spiReceiveWait
   762  0124                     l784:	
   763                           
   764                           ;SPI.c: 49:     return(SSPBUF);
   765  0124  1283               	bcf	3,5	;RP0=0, select bank0
   766  0125  1303               	bcf	3,6	;RP1=0, select bank0
   767  0126  0813               	movf	19,w	;volatile
   768  0127                     l95:	
   769  0127  0008               	return
   770  0128                     __end_of_spiRead:	
   771                           
   772                           	psect	text3
   773  0128                     __ptext3:	
   774 ;; *************** function _spiReceiveWait *****************
   775 ;; Defined at:
   776 ;;		line 28 in file "SPI.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		None
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_spiRead
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _spiReceiveWait
   806  0128                     _spiReceiveWait:	
   807  0128                     l728:	
   808                           ;incstack = 0
   809                           ; Regs used in _spiReceiveWait: []
   810                           
   811  0128                     l81:	
   812                           ;SPI.c: 30:     while ( !SSPSTATbits.BF );
   813                           
   814  0128  1683               	bsf	3,5	;RP0=1, select bank1
   815  0129  1303               	bcf	3,6	;RP1=0, select bank1
   816  012A  1C14               	btfss	20,0	;volatile
   817  012B  292D               	goto	u21
   818  012C  292E               	goto	u20
   819  012D                     u21:	
   820  012D  2928               	goto	l81
   821  012E                     u20:	
   822  012E                     l84:	
   823  012E  0008               	return
   824  012F                     __end_of_spiReceiveWait:	
   825                           
   826                           	psect	text4
   827  00D0                     __ptext4:	
   828 ;; *************** function _setup *****************
   829 ;; Defined at:
   830 ;;		line 69 in file "main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0
   847 ;;      Totals:         0       0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    2
   851 ;; This function calls:
   852 ;;		_spiInit
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _setup
   860  00D0                     _setup:	
   861  00D0                     l944:	
   862                           ;incstack = 0
   863                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   864                           
   865                           
   866                           ;main.c: 70:     ANSEL = 0;
   867  00D0  1683               	bsf	3,5	;RP0=1, select bank3
   868  00D1  1703               	bsf	3,6	;RP1=1, select bank3
   869  00D2  0188               	clrf	8	;volatile
   870                           
   871                           ;main.c: 71:     ANSELH = 0;
   872  00D3  0189               	clrf	9	;volatile
   873  00D4                     l946:	
   874                           
   875                           ;main.c: 72:     TRISC2 = 0;
   876  00D4  1683               	bsf	3,5	;RP0=1, select bank1
   877  00D5  1303               	bcf	3,6	;RP1=0, select bank1
   878  00D6  1107               	bcf	7,2	;volatile
   879                           
   880                           ;main.c: 73:     TRISA = 0;
   881  00D7  0185               	clrf	5	;volatile
   882                           
   883                           ;main.c: 74:     TRISB = 0;
   884  00D8  0186               	clrf	6	;volatile
   885                           
   886                           ;main.c: 75:     TRISD = 0;
   887  00D9  0188               	clrf	8	;volatile
   888                           
   889                           ;main.c: 76:     PORTA = 0;
   890  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   891  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   892  00DC  0185               	clrf	5	;volatile
   893                           
   894                           ;main.c: 77:     PORTB = 0;
   895  00DD  0186               	clrf	6	;volatile
   896                           
   897                           ;main.c: 78:     PORTD = 0;
   898  00DE  0188               	clrf	8	;volatile
   899  00DF                     l948:	
   900                           
   901                           ;main.c: 79:     PORTCbits.RC2 = 1;
   902  00DF  1507               	bsf	7,2	;volatile
   903  00E0                     l950:	
   904                           
   905                           ;main.c: 80:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   906  00E0  01F2               	clrf	spiInit@sDataSample
   907  00E1  01F3               	clrf	spiInit@sClockIdle
   908  00E2  01F4               	clrf	spiInit@sTransmitEdge
   909  00E3  3020               	movlw	32
   910  00E4  120A  118A  20EC  120A  118A  	fcall	_spiInit
   911  00E9                     l952:	
   912                           
   913                           ;main.c: 81:     INTCONbits.GIE = 1;
   914  00E9  178B               	bsf	11,7	;volatile
   915  00EA                     l954:	
   916                           
   917                           ;main.c: 82:     INTCONbits.PEIE = 1;
   918  00EA  170B               	bsf	11,6	;volatile
   919  00EB                     l61:	
   920  00EB  0008               	return
   921  00EC                     __end_of_setup:	
   922                           
   923                           	psect	text5
   924  00EC                     __ptext5:	
   925 ;; *************** function _spiInit *****************
   926 ;; Defined at:
   927 ;;		line 11 in file "SPI.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  sType           1    wreg     enum E1264
   930 ;;  sDataSample     1    2[COMMON] enum E1272
   931 ;;  sClockIdle      1    3[COMMON] enum E1276
   932 ;;  sTransmitEdg    1    4[COMMON] enum E1280
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  sType           1    5[COMMON] enum E1264
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         3       0       0       0       0
   945 ;;      Locals:         1       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0
   947 ;;      Totals:         4       0       0       0       0
   948 ;;Total ram usage:        4 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_setup
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           
   959                           ;psect for function _spiInit
   960  00EC                     _spiInit:	
   961                           
   962                           ;incstack = 0
   963                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   964                           ;spiInit@sType stored from wreg
   965  00EC  00F5               	movwf	spiInit@sType
   966  00ED                     l934:	
   967                           
   968                           ;SPI.c: 11: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 12: {;SPI.c: 13:     TRISC5 = 0;
   969  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   970  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   971  00EF  1287               	bcf	7,5	;volatile
   972                           
   973                           ;SPI.c: 14:     if(sType & 0b00000100)
   974  00F0  1D75               	btfss	spiInit@sType,2
   975  00F1  28F3               	goto	u51
   976  00F2  28F4               	goto	u50
   977  00F3                     u51:	
   978  00F3  28F8               	goto	l940
   979  00F4                     u50:	
   980  00F4                     l936:	
   981                           
   982                           ;SPI.c: 15:     {;SPI.c: 16:         SSPSTAT = sTransmitEdge;
   983  00F4  0874               	movf	spiInit@sTransmitEdge,w
   984  00F5  0094               	movwf	20	;volatile
   985  00F6                     l938:	
   986                           
   987                           ;SPI.c: 17:         TRISC3 = 1;
   988  00F6  1587               	bsf	7,3	;volatile
   989                           
   990                           ;SPI.c: 18:     }
   991  00F7  28FC               	goto	l77
   992  00F8                     l940:	
   993                           
   994                           ;SPI.c: 20:     {;SPI.c: 21:         SSPSTAT = sDataSample | sTransmitEdge;
   995  00F8  0872               	movf	spiInit@sDataSample,w
   996  00F9  0474               	iorwf	spiInit@sTransmitEdge,w
   997  00FA  0094               	movwf	20	;volatile
   998  00FB                     l942:	
   999                           
  1000                           ;SPI.c: 22:         TRISC3 = 0;
  1001  00FB  1187               	bcf	7,3	;volatile
  1002  00FC                     l77:	
  1003                           ;SPI.c: 23:     }
  1004                           
  1005                           
  1006                           ;SPI.c: 25:     SSPCON = sType | sClockIdle;
  1007  00FC  0875               	movf	spiInit@sType,w
  1008  00FD  0473               	iorwf	spiInit@sClockIdle,w
  1009  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1010  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0100  0094               	movwf	20	;volatile
  1012  0101                     l78:	
  1013  0101  0008               	return
  1014  0102                     __end_of_spiInit:	
  1015                           
  1016                           	psect	text6
  1017  0113                     __ptext6:	
  1018 ;; *************** function _ENVIO *****************
  1019 ;; Defined at:
  1020 ;;		line 47 in file "EUSART.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  value           1    wreg     unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  value           1    2[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0
  1037 ;;      Totals:         1       0       0       0       0
  1038 ;;Total ram usage:        1 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function _ENVIO
  1050  0113                     _ENVIO:	
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _ENVIO: [wreg]
  1054                           ;ENVIO@value stored from wreg
  1055  0113  00F2               	movwf	ENVIO@value
  1056  0114                     l788:	
  1057  0114                     l123:	
  1058                           ;EUSART.c: 48:     while (TXSTAbits.TRMT == 0);
  1059                           
  1060  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0116  1C98               	btfss	24,1	;volatile
  1063  0117  2919               	goto	u31
  1064  0118  291A               	goto	u30
  1065  0119                     u31:	
  1066  0119  2914               	goto	l123
  1067  011A                     u30:	
  1068  011A                     l790:	
  1069                           
  1070                           ;EUSART.c: 49:     TXREG = value;
  1071  011A  0872               	movf	ENVIO@value,w
  1072  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1073  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1074  011D  0099               	movwf	25	;volatile
  1075  011E                     l126:	
  1076  011E  0008               	return
  1077  011F                     __end_of_ENVIO:	
  1078                           
  1079                           	psect	text7
  1080  0082                     __ptext7:	
  1081 ;; *************** function _ComSetup *****************
  1082 ;; Defined at:
  1083 ;;		line 13 in file "EUSART.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  BR              2    2[COMMON] unsigned int 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         2       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         2       0       0       0       0
  1101 ;;Total ram usage:        2 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _ComSetup
  1113  0082                     _ComSetup:	
  1114  0082                     l956:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _ComSetup: [wreg-fsr0h+status,2+status,0]
  1117                           
  1118                           
  1119                           ;EUSART.c: 14:     TXSTAbits.TX9 = 0;
  1120  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1121  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1122  0084  1318               	bcf	24,6	;volatile
  1123                           
  1124                           ;EUSART.c: 15:     TXSTAbits.TXEN = 1;
  1125  0085  1698               	bsf	24,5	;volatile
  1126                           
  1127                           ;EUSART.c: 16:     TXSTAbits.SYNC = 0;
  1128  0086  1218               	bcf	24,4	;volatile
  1129                           
  1130                           ;EUSART.c: 17:     TXSTAbits.BRGH = 1;
  1131  0087  1518               	bsf	24,2	;volatile
  1132                           
  1133                           ;EUSART.c: 18:     RCSTAbits.SPEN = 1;
  1134  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1136  008A  1798               	bsf	24,7	;volatile
  1137                           
  1138                           ;EUSART.c: 19:     RCSTAbits.RX9 = 0;
  1139  008B  1318               	bcf	24,6	;volatile
  1140                           
  1141                           ;EUSART.c: 20:     RCSTAbits.CREN = 1;
  1142  008C  1618               	bsf	24,4	;volatile
  1143                           
  1144                           ;EUSART.c: 21:     BAUDCTLbits.BRG16 = 0;
  1145  008D  1683               	bsf	3,5	;RP0=1, select bank3
  1146  008E  1703               	bsf	3,6	;RP1=1, select bank3
  1147  008F  1187               	bcf	7,3	;volatile
  1148                           
  1149                           ;EUSART.c: 22:     (INTCONbits.GIE = 1);
  1150  0090  178B               	bsf	11,7	;volatile
  1151                           
  1152                           ;EUSART.c: 23:     INTCONbits.PEIE = 1;
  1153  0091  170B               	bsf	11,6	;volatile
  1154                           
  1155                           ;EUSART.c: 24:     PIE1bits.RCIE = 1;
  1156  0092  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0093  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0094  168C               	bsf	12,5	;volatile
  1159                           
  1160                           ;EUSART.c: 25:     switch (BR){
  1161  0095  28A5               	goto	l972
  1162  0096                     l958:	
  1163                           
  1164                           ;EUSART.c: 27:             SPBRG = 207;
  1165  0096  30CF               	movlw	207
  1166  0097  0099               	movwf	25	;volatile
  1167                           
  1168                           ;EUSART.c: 28:             break;
  1169  0098  28CF               	goto	l120
  1170  0099                     l960:	
  1171                           
  1172                           ;EUSART.c: 30:             SPBRG = 103;
  1173  0099  3067               	movlw	103
  1174  009A  0099               	movwf	25	;volatile
  1175                           
  1176                           ;EUSART.c: 31:             break;
  1177  009B  28CF               	goto	l120
  1178  009C                     l962:	
  1179                           
  1180                           ;EUSART.c: 33:             SPBRG = 25;
  1181  009C  3019               	movlw	25
  1182  009D  0099               	movwf	25	;volatile
  1183                           
  1184                           ;EUSART.c: 34:             break;
  1185  009E  28CF               	goto	l120
  1186  009F                     l964:	
  1187                           
  1188                           ;EUSART.c: 36:             SPBRG = 23;
  1189  009F  3017               	movlw	23
  1190  00A0  0099               	movwf	25	;volatile
  1191                           
  1192                           ;EUSART.c: 37:             break;
  1193  00A1  28CF               	goto	l120
  1194  00A2                     l966:	
  1195                           
  1196                           ;EUSART.c: 39:             SPBRG = 12;
  1197  00A2  300C               	movlw	12
  1198  00A3  0099               	movwf	25	;volatile
  1199                           
  1200                           ;EUSART.c: 40:             break;
  1201  00A4  28CF               	goto	l120
  1202  00A5                     l972:	
  1203                           
  1204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 5, Range of values is 4 to 75
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte           16     9 (average)
  1210                           ; direct_byte          227    11 (fixed)
  1211                           ; jumptable            263     9 (fixed)
  1212                           ;	Chosen strategy is simple_byte
  1213  00A5  0873               	movf	ComSetup@BR+1,w
  1214  00A6  3A04               	xorlw	4	; case 4
  1215  00A7  1903               	skipnz
  1216  00A8  28B6               	goto	l1124
  1217  00A9  3A0D               	xorlw	13	; case 9
  1218  00AA  1903               	skipnz
  1219  00AB  28BB               	goto	l1126
  1220  00AC  3A2C               	xorlw	44	; case 37
  1221  00AD  1903               	skipnz
  1222  00AE  28C0               	goto	l1128
  1223  00AF  3A0D               	xorlw	13	; case 40
  1224  00B0  1903               	skipnz
  1225  00B1  28C5               	goto	l1130
  1226  00B2  3A63               	xorlw	99	; case 75
  1227  00B3  1903               	skipnz
  1228  00B4  28CA               	goto	l1132
  1229  00B5  289C               	goto	l962
  1230  00B6                     l1124:	
  1231                           
  1232                           ; Switch size 1, requested type "simple"
  1233                           ; Number of cases is 1, Range of values is 176 to 176
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte            4     3 (average)
  1237                           ; direct_byte           14    11 (fixed)
  1238                           ; jumptable            263     9 (fixed)
  1239                           ;	Chosen strategy is simple_byte
  1240  00B6  0872               	movf	ComSetup@BR,w
  1241  00B7  3AB0               	xorlw	176	; case 176
  1242  00B8  1903               	skipnz
  1243  00B9  2896               	goto	l958
  1244  00BA  289C               	goto	l962
  1245  00BB                     l1126:	
  1246                           
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 1, Range of values is 96 to 96
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte            4     3 (average)
  1252                           ; direct_byte           14    11 (fixed)
  1253                           ; jumptable            263     9 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255  00BB  0872               	movf	ComSetup@BR,w
  1256  00BC  3A60               	xorlw	96	; case 96
  1257  00BD  1903               	skipnz
  1258  00BE  2899               	goto	l960
  1259  00BF  289C               	goto	l962
  1260  00C0                     l1128:	
  1261                           
  1262                           ; Switch size 1, requested type "simple"
  1263                           ; Number of cases is 1, Range of values is 128 to 128
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte            4     3 (average)
  1267                           ; direct_byte           14    11 (fixed)
  1268                           ; jumptable            263     9 (fixed)
  1269                           ;	Chosen strategy is simple_byte
  1270  00C0  0872               	movf	ComSetup@BR,w
  1271  00C1  3A80               	xorlw	128	; case 128
  1272  00C2  1903               	skipnz
  1273  00C3  289C               	goto	l962
  1274  00C4  289C               	goto	l962
  1275  00C5                     l1130:	
  1276                           
  1277                           ; Switch size 1, requested type "simple"
  1278                           ; Number of cases is 1, Range of values is 177 to 177
  1279                           ; switch strategies available:
  1280                           ; Name         Instructions Cycles
  1281                           ; simple_byte            4     3 (average)
  1282                           ; direct_byte           14    11 (fixed)
  1283                           ; jumptable            263     9 (fixed)
  1284                           ;	Chosen strategy is simple_byte
  1285  00C5  0872               	movf	ComSetup@BR,w
  1286  00C6  3AB1               	xorlw	177	; case 177
  1287  00C7  1903               	skipnz
  1288  00C8  289F               	goto	l964
  1289  00C9  289C               	goto	l962
  1290  00CA                     l1132:	
  1291                           
  1292                           ; Switch size 1, requested type "simple"
  1293                           ; Number of cases is 1, Range of values is 0 to 0
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte            4     3 (average)
  1297                           ; direct_byte           11     8 (fixed)
  1298                           ; jumptable            260     6 (fixed)
  1299                           ;	Chosen strategy is simple_byte
  1300  00CA  0872               	movf	ComSetup@BR,w
  1301  00CB  3A00               	xorlw	0	; case 0
  1302  00CC  1903               	skipnz
  1303  00CD  28A2               	goto	l966
  1304  00CE  289C               	goto	l962
  1305  00CF                     l120:	
  1306  00CF  0008               	return
  1307  00D0                     __end_of_ComSetup:	
  1308                           
  1309                           	psect	text8
  1310  0102                     __ptext8:	
  1311 ;; *************** function _ISR *****************
  1312 ;; Defined at:
  1313 ;;		line 41 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          2       0       0       0       0
  1330 ;;      Totals:         2       0       0       0       0
  1331 ;;Total ram usage:        2 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		Interrupt level 1
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _ISR
  1342  0102                     _ISR:	
  1343  0102                     i1l792:	
  1344                           
  1345                           ;main.c: 42:     (INTCONbits.GIE = 0);
  1346  0102  138B               	bcf	11,7	;volatile
  1347                           
  1348                           ;main.c: 43:     if(PIR1bits.RCIF == 1){
  1349  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0105  1E8C               	btfss	12,5	;volatile
  1352  0106  2908               	goto	u4_21
  1353  0107  2909               	goto	u4_20
  1354  0108                     u4_21:	
  1355  0108  290B               	goto	i1l796
  1356  0109                     u4_20:	
  1357  0109                     i1l794:	
  1358                           
  1359                           ;main.c: 44:         PORTB = RCREG;
  1360  0109  081A               	movf	26,w	;volatile
  1361  010A  0086               	movwf	6	;volatile
  1362  010B                     i1l796:	
  1363                           
  1364                           ;main.c: 46:     (INTCONbits.GIE = 1);
  1365  010B  178B               	bsf	11,7	;volatile
  1366  010C                     i1l50:	
  1367  010C  0871               	movf	??_ISR+1,w
  1368  010D  008A               	movwf	10
  1369  010E  0E70               	swapf	??_ISR^(0+4294967168),w
  1370  010F  0083               	movwf	3
  1371  0110  0EFE               	swapf	btemp,f
  1372  0111  0E7E               	swapf	btemp,w
  1373  0112  0009               	retfie
  1374  0113                     __end_of_ISR:	
  1375  007E                     btemp	set	126	;btemp
  1376  007E                     wtemp0	set	126
  1377                           
  1378                           	psect	intentry
  1379  0004                     __pintentry:	
  1380                           ;incstack = 0
  1381                           ; Regs used in _ISR: [wreg]
  1382                           
  1383  0004                     interrupt_function:	
  1384  007E                     saved_w	set	btemp
  1385  0004  00FE               	movwf	btemp
  1386  0005  0E03               	swapf	3,w
  1387  0006  00F0               	movwf	??_ISR
  1388  0007  080A               	movf	10,w
  1389  0008  00F1               	movwf	??_ISR+1
  1390  0009  120A  118A  2902   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     488
                                              6 COMMON     2     2      0
                           _ComSetup
                              _ENVIO
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ENVIO                                                1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ComSetup                                             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ComSetup
   _ENVIO
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 17:32:31 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l61 00EB  
                      l81 0128                        l84 012E                        l77 00FC  
                      l78 0101                        l95 0127                        l87 0134  
                      u20 012E                        u21 012D                        u30 011A  
                      u31 0119                        u50 00F4                        u51 00F3  
                      u67 002A                        u77 0041                        u87 0058  
                      u97 006A                       l120 00CF                       l123 0114  
                     l126 011E                       l728 0128                       l940 00F8  
                     l780 0130                       l790 011A                       l942 00FB  
                     l934 00ED                       l950 00E0                       l782 011F  
                     l960 0099                       l936 00F4                       l952 00E9  
                     l944 00D0                       l784 0124                       l962 009C  
                     l938 00F6                       l954 00EA                       l946 00D4  
                     l964 009F                       l972 00A5                       l956 0082  
                     l788 0114                       l948 00DF                       l966 00A2  
                     l958 0096                       l994 0015                       l996 001A  
                     l998 0023                       u107 0079              __CFG_CPD$OFF 0000  
                     _ISR 0102              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1000 0026                      l1010 004C                      l1002 002F  
                    l1020 006F                      l1012 0054                      l1004 0035  
                    l1022 0075                      l1014 005D                      l1006 003D  
                    l1016 0060                      l1008 0046                      l1130 00C5  
                    l1018 0066                      l1132 00CA                      l1124 00B6  
                    l1126 00BB                      l1128 00C0                      i1l50 010C  
                    u4_20 0109                      u4_21 0108              __CFG_WRT$OFF 0000  
                    _main 0015                      _pot1 0079                      _pot2 0078  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _ENVIO 0113                     i1l792 0102  
                   i1l794 0109                     i1l796 010B                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
                   _setup 00D0            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 0102           __end_of_spiRead 0128                     status 0003  
                   wtemp0 007E          __end_of_ComSetup 00D0            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0082                    ??_main 0076  
                  ?_ENVIO 0070                    ?_setup 0070                    _ANSELH 0189  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E          __end_of_spiWrite 0135                 ??_spiInit 0075  
               ??_spiRead 0072   __end_of__initialization 0011             __end_of_ENVIO 011F  
          __pcstackCOMMON 0070             __end_of_setup 00EC                   ??_ENVIO 0072  
               ?_ComSetup 0072                   ??_setup 0076                __pmaintext 0015  
              __pintentry 0004   __size_of_spiReceiveWait 0007                ??_ComSetup 0074  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   __ptext1 012F  
                 __ptext2 011F                   __ptext3 0128                   __ptext4 00D0  
                 __ptext5 00EC                   __ptext6 0113                   __ptext7 0082  
                 __ptext8 0102              __size_of_ISR 0011                   _spiInit 00EC  
                 _spiRead 011F      end_of_initialization 0011                 _RCSTAbits 0018  
              ??_spiWrite 0072                 _PORTCbits 0007               spiWrite@dat 0072  
              ENVIO@value 0072                 _TXSTAbits 0098            _spiReceiveWait 0128  
             _BAUDCTLbits 0187       start_initialization 000F               __end_of_ISR 0113  
       __size_of_ComSetup 004E  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 012F  
             __pbssCOMMON 0078                 ___latbits 0002           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006            __size_of_ENVIO 000C                  ?_spiInit 0072  
                ?_spiRead 0070            __size_of_setup 001C      spiInit@sTransmitEdge 0074  
       interrupt_function 0004                  _PIE1bits 008C        spiInit@sDataSample 0072  
                _PIR1bits 000C                  _ComSetup 0082          __size_of_spiInit 0016  
        __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000             __size_of_main 006D  
                _spiWrite 012F              spiInit@sType 0075         spiInit@sClockIdle 0073  
              _INTCONbits 000B                  intlevel1 0000          ??_spiReceiveWait 0072  
              ComSetup@BR 0072  
