

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 18:05:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  008F                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0097                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009A                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  0105                     	;# 
   347  0107                     	;# 
   348  0108                     	;# 
   349  0109                     	;# 
   350  010C                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  0185                     	;# 
   356  0187                     	;# 
   357  0188                     	;# 
   358  0189                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0019                     _TXREG	set	25
   362  000B                     _INTCONbits	set	11
   363  0018                     _RCSTAbits	set	24
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  0008                     _PORTD	set	8
   367  0006                     _PORTB	set	6
   368  0005                     _PORTA	set	5
   369  0007                     _PORTCbits	set	7
   370  0099                     _SPBRG	set	153
   371  008C                     _PIE1bits	set	140
   372  0098                     _TXSTAbits	set	152
   373  0094                     _SSPSTATbits	set	148
   374  0094                     _SSPSTAT	set	148
   375  0088                     _TRISD	set	136
   376  0086                     _TRISB	set	134
   377  0085                     _TRISA	set	133
   378  043B                     _TRISC3	set	1083
   379  043D                     _TRISC5	set	1085
   380  043A                     _TRISC2	set	1082
   381  0187                     _BAUDCTLbits	set	391
   382  0189                     _ANSELH	set	393
   383  0188                     _ANSEL	set	392
   384                           
   385                           ; #config settings
   386  0000                     
   387                           	psect	cinit
   388  07FA                     start_initialization:	
   389  07FA                     __initialization:	
   390                           
   391                           ; Clear objects allocated to COMMON
   392  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   393  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   394  07FC                     end_of_initialization:	
   395                           ;End of C runtime variable initialization code
   396                           
   397  07FC                     __end_of__initialization:	
   398  07FC  0183               	clrf	3
   399  07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMMON
   402  0076                     __pbssCOMMON:	
   403  0076                     _pot2:	
   404  0076                     	ds	1
   405  0077                     _pot1:	
   406  0077                     	ds	1
   407                           
   408                           	psect	cstackCOMMON
   409  0070                     __pcstackCOMMON:	
   410  0070                     ?_setup:	
   411  0070                     ?_spiWrite:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_spiWrite:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_spiRead:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ??_spiRead:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_spiInit:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_spiReceiveWait:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_spiReceiveWait:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     spiInit@sDataSample:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     spiWrite@dat:	
   439                           ; 1 bytes @ 0x0
   440                           
   441                           
   442                           ; 1 bytes @ 0x0
   443  0070                     	ds	1
   444  0071                     spiInit@sClockIdle:	
   445                           
   446                           ; 1 bytes @ 0x1
   447  0071                     	ds	1
   448  0072                     spiInit@sTransmitEdge:	
   449                           
   450                           ; 1 bytes @ 0x2
   451  0072                     	ds	1
   452  0073                     ??_spiInit:	
   453  0073                     spiInit@sType:	
   454                           ; 1 bytes @ 0x3
   455                           
   456                           
   457                           ; 1 bytes @ 0x3
   458  0073                     	ds	1
   459  0074                     ??_setup:	
   460  0074                     ??_main:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 1 bytes @ 0x4
   465  0074                     	ds	2
   466                           
   467                           	psect	maintext
   468  07B4                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 40 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          2       0       0       0       0
   491 ;;      Totals:         2       0       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels required when called:    2
   494 ;; This function calls:
   495 ;;		_setup
   496 ;;		_spiRead
   497 ;;		_spiWrite
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _main
   505  07B4                     _main:	
   506  07B4                     l812:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   509                           
   510                           
   511                           ;main.c: 41:     setup();
   512  07B4  120A  118A  279A  120A  118A  	fcall	_setup
   513  07B9                     l814:	
   514                           
   515                           ;main.c: 43:         PORTCbits.RC2 = 0;
   516  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   517  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   518  07BB  1107               	bcf	7,2	;volatile
   519  07BC                     l816:	
   520                           
   521                           ;main.c: 44:         _delay((unsigned long)((1)*(8000000/4000.0)));
   522  07BC  3003               	movlw	3
   523  07BD  00F5               	movwf	??_main+1
   524  07BE  3097               	movlw	151
   525  07BF  00F4               	movwf	??_main
   526  07C0                     u57:	
   527  07C0  0BF4               	decfsz	??_main,f
   528  07C1  2FC0               	goto	u57
   529  07C2  0BF5               	decfsz	??_main+1,f
   530  07C3  2FC0               	goto	u57
   531  07C4  2FC5               	nop2
   532  07C5                     l818:	
   533                           
   534                           ;main.c: 45:         spiWrite(1);
   535  07C5  3001               	movlw	1
   536  07C6  120A  118A  276E  120A  118A  	fcall	_spiWrite
   537  07CB                     l820:	
   538                           
   539                           ;main.c: 46:         pot1 = spiRead();
   540  07CB  120A  118A  277B  120A  118A  	fcall	_spiRead
   541  07D0  00F4               	movwf	??_main
   542  07D1  0874               	movf	??_main,w
   543  07D2  00F7               	movwf	_pot1
   544  07D3                     l822:	
   545                           
   546                           ;main.c: 47:         _delay((unsigned long)((10)*(8000000/4000.0)));
   547  07D3  301A               	movlw	26
   548  07D4  00F5               	movwf	??_main+1
   549  07D5  30F8               	movlw	248
   550  07D6  00F4               	movwf	??_main
   551  07D7                     u67:	
   552  07D7  0BF4               	decfsz	??_main,f
   553  07D8  2FD7               	goto	u67
   554  07D9  0BF5               	decfsz	??_main+1,f
   555  07DA  2FD7               	goto	u67
   556  07DB  0000               	nop
   557                           
   558                           ;main.c: 48:         spiWrite(0);
   559  07DC  3000               	movlw	0
   560  07DD  120A  118A  276E  120A  118A  	fcall	_spiWrite
   561                           
   562                           ;main.c: 49:         pot2 = spiRead();
   563  07E2  120A  118A  277B  120A  118A  	fcall	_spiRead
   564  07E7  00F4               	movwf	??_main
   565  07E8  0874               	movf	??_main,w
   566  07E9  00F6               	movwf	_pot2
   567  07EA                     l824:	
   568                           
   569                           ;main.c: 50:          _delay((unsigned long)((1)*(8000000/4000.0)));
   570  07EA  3003               	movlw	3
   571  07EB  00F5               	movwf	??_main+1
   572  07EC  3097               	movlw	151
   573  07ED  00F4               	movwf	??_main
   574  07EE                     u77:	
   575  07EE  0BF4               	decfsz	??_main,f
   576  07EF  2FEE               	goto	u77
   577  07F0  0BF5               	decfsz	??_main+1,f
   578  07F1  2FEE               	goto	u77
   579  07F2  2FF3               	nop2
   580  07F3                     l826:	
   581                           
   582                           ;main.c: 51:        PORTCbits.RC2 = 1;
   583  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   584  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   585  07F5  1507               	bsf	7,2	;volatile
   586  07F6  2FB9               	goto	l814
   587  07F7  120A  118A  2800   	ljmp	start
   588  07FA                     __end_of_main:	
   589                           
   590                           	psect	text1
   591  076E                     __ptext1:	
   592 ;; *************** function _spiWrite *****************
   593 ;; Defined at:
   594 ;;		line 32 in file "SPI.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  dat             1    wreg     unsigned char 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  dat             1    0[COMMON] unsigned char 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         1       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         1       0       0       0       0
   612 ;;Total ram usage:        1 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _spiWrite
   623  076E                     _spiWrite:	
   624                           
   625                           ;incstack = 0
   626                           ; Regs used in _spiWrite: [wreg]
   627                           ;spiWrite@dat stored from wreg
   628  076E  00F0               	movwf	spiWrite@dat
   629  076F                     l722:	
   630                           
   631                           ;SPI.c: 32: void spiWrite(char dat);SPI.c: 33: {;SPI.c: 34:     SSPBUF = dat;
   632  076F  0870               	movf	spiWrite@dat,w
   633  0770  1283               	bcf	3,5	;RP0=0, select bank0
   634  0771  1303               	bcf	3,6	;RP1=0, select bank0
   635  0772  0093               	movwf	19	;volatile
   636  0773                     l71:	
   637  0773  0008               	return
   638  0774                     __end_of_spiWrite:	
   639                           
   640                           	psect	text2
   641  077B                     __ptext2:	
   642 ;; *************** function _spiRead *****************
   643 ;; Defined at:
   644 ;;		line 45 in file "SPI.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      unsigned char 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    1
   665 ;; This function calls:
   666 ;;		_spiReceiveWait
   667 ;; This function is called by:
   668 ;;		_main
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           
   673                           ;psect for function _spiRead
   674  077B                     _spiRead:	
   675  077B                     l724:	
   676                           ;incstack = 0
   677                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   678                           
   679                           
   680                           ;SPI.c: 47:     spiReceiveWait();
   681  077B  120A  118A  2774  120A  118A  	fcall	_spiReceiveWait
   682  0780                     l726:	
   683                           
   684                           ;SPI.c: 48:     return(SSPBUF);
   685  0780  1283               	bcf	3,5	;RP0=0, select bank0
   686  0781  1303               	bcf	3,6	;RP1=0, select bank0
   687  0782  0813               	movf	19,w	;volatile
   688  0783                     l79:	
   689  0783  0008               	return
   690  0784                     __end_of_spiRead:	
   691                           
   692                           	psect	text3
   693  0774                     __ptext3:	
   694 ;; *************** function _spiReceiveWait *****************
   695 ;; Defined at:
   696 ;;		line 27 in file "SPI.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		None
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_spiRead
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _spiReceiveWait
   725  0774                     _spiReceiveWait:	
   726  0774                     l712:	
   727                           ;incstack = 0
   728                           ; Regs used in _spiReceiveWait: []
   729                           
   730  0774                     l65:	
   731                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
   732                           
   733  0774  1683               	bsf	3,5	;RP0=1, select bank1
   734  0775  1303               	bcf	3,6	;RP1=0, select bank1
   735  0776  1C14               	btfss	20,0	;volatile
   736  0777  2F79               	goto	u21
   737  0778  2F7A               	goto	u20
   738  0779                     u21:	
   739  0779  2F74               	goto	l65
   740  077A                     u20:	
   741  077A                     l68:	
   742  077A  0008               	return
   743  077B                     __end_of_spiReceiveWait:	
   744                           
   745                           	psect	text4
   746  079A                     __ptext4:	
   747 ;; *************** function _setup *****************
   748 ;; Defined at:
   749 ;;		line 57 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    1
   770 ;; This function calls:
   771 ;;		_spiInit
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _setup
   779  079A                     _setup:	
   780  079A                     l804:	
   781                           ;incstack = 0
   782                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   783                           
   784                           
   785                           ;main.c: 58:     ANSEL = 0;
   786  079A  1683               	bsf	3,5	;RP0=1, select bank3
   787  079B  1703               	bsf	3,6	;RP1=1, select bank3
   788  079C  0188               	clrf	8	;volatile
   789                           
   790                           ;main.c: 59:     ANSELH = 0;
   791  079D  0189               	clrf	9	;volatile
   792  079E                     l806:	
   793                           
   794                           ;main.c: 60:     TRISC2 = 0;
   795  079E  1683               	bsf	3,5	;RP0=1, select bank1
   796  079F  1303               	bcf	3,6	;RP1=0, select bank1
   797  07A0  1107               	bcf	7,2	;volatile
   798                           
   799                           ;main.c: 61:     TRISA = 0;
   800  07A1  0185               	clrf	5	;volatile
   801                           
   802                           ;main.c: 62:     TRISB = 0;
   803  07A2  0186               	clrf	6	;volatile
   804                           
   805                           ;main.c: 63:     TRISD = 0;
   806  07A3  0188               	clrf	8	;volatile
   807                           
   808                           ;main.c: 64:     PORTA = 0;
   809  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   810  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   811  07A6  0185               	clrf	5	;volatile
   812                           
   813                           ;main.c: 65:     PORTB = 0;
   814  07A7  0186               	clrf	6	;volatile
   815                           
   816                           ;main.c: 66:     PORTD = 0;
   817  07A8  0188               	clrf	8	;volatile
   818  07A9                     l808:	
   819                           
   820                           ;main.c: 67:     PORTCbits.RC2 = 1;
   821  07A9  1507               	bsf	7,2	;volatile
   822  07AA                     l810:	
   823                           
   824                           ;main.c: 68:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   825  07AA  01F0               	clrf	spiInit@sDataSample
   826  07AB  01F1               	clrf	spiInit@sClockIdle
   827  07AC  01F2               	clrf	spiInit@sTransmitEdge
   828  07AD  3020               	movlw	32
   829  07AE  120A  118A  2784  120A  118A  	fcall	_spiInit
   830  07B3                     l45:	
   831  07B3  0008               	return
   832  07B4                     __end_of_setup:	
   833                           
   834                           	psect	text5
   835  0784                     __ptext5:	
   836 ;; *************** function _spiInit *****************
   837 ;; Defined at:
   838 ;;		line 10 in file "SPI.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  sType           1    wreg     enum E1264
   841 ;;  sDataSample     1    0[COMMON] enum E1272
   842 ;;  sClockIdle      1    1[COMMON] enum E1276
   843 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  sType           1    3[COMMON] enum E1264
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         3       0       0       0       0
   856 ;;      Locals:         1       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         4       0       0       0       0
   859 ;;Total ram usage:        4 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_setup
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _spiInit
   870  0784                     _spiInit:	
   871                           
   872                           ;incstack = 0
   873                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   874                           ;spiInit@sType stored from wreg
   875  0784  00F3               	movwf	spiInit@sType
   876  0785                     l794:	
   877                           
   878                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
   879  0785  1683               	bsf	3,5	;RP0=1, select bank1
   880  0786  1303               	bcf	3,6	;RP1=0, select bank1
   881  0787  1287               	bcf	7,5	;volatile
   882                           
   883                           ;SPI.c: 13:     if(sType & 0b00000100)
   884  0788  1D73               	btfss	spiInit@sType,2
   885  0789  2F8B               	goto	u41
   886  078A  2F8C               	goto	u40
   887  078B                     u41:	
   888  078B  2F90               	goto	l800
   889  078C                     u40:	
   890  078C                     l796:	
   891                           
   892                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   893  078C  0872               	movf	spiInit@sTransmitEdge,w
   894  078D  0094               	movwf	20	;volatile
   895  078E                     l798:	
   896                           
   897                           ;SPI.c: 16:         TRISC3 = 1;
   898  078E  1587               	bsf	7,3	;volatile
   899                           
   900                           ;SPI.c: 17:     }
   901  078F  2F94               	goto	l61
   902  0790                     l800:	
   903                           
   904                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   905  0790  0870               	movf	spiInit@sDataSample,w
   906  0791  0472               	iorwf	spiInit@sTransmitEdge,w
   907  0792  0094               	movwf	20	;volatile
   908  0793                     l802:	
   909                           
   910                           ;SPI.c: 21:         TRISC3 = 0;
   911  0793  1187               	bcf	7,3	;volatile
   912  0794                     l61:	
   913                           ;SPI.c: 22:     }
   914                           
   915                           
   916                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   917  0794  0873               	movf	spiInit@sType,w
   918  0795  0471               	iorwf	spiInit@sClockIdle,w
   919  0796  1283               	bcf	3,5	;RP0=0, select bank0
   920  0797  1303               	bcf	3,6	;RP1=0, select bank0
   921  0798  0094               	movwf	20	;volatile
   922  0799                     l62:	
   923  0799  0008               	return
   924  079A                     __end_of_spiInit:	
   925  007E                     btemp	set	126	;btemp
   926  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 18:05:39 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l61 0794  
                      l45 07B3                        l62 0799                        l71 0773  
                      l65 0774                        l68 077A                        l79 0783  
                      u20 077A                        u21 0779                        u40 078C  
                      u41 078B                        u57 07C0                        u67 07D7  
                      u77 07EE                       l800 0790                       l712 0774  
                     l802 0793                       l810 07AA                       l722 076F  
                     l804 079A                       l724 077B                       l820 07CB  
                     l812 07B4                       l806 079E                       l726 0780  
                     l822 07D3                       l814 07B9                       l808 07A9  
                     l824 07EA                       l816 07BC                       l826 07F3  
                     l818 07C5                       l794 0785                       l796 078C  
                     l798 078E              __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 07B4                      _pot1 0077  
                    _pot2 0076                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000                     _setup 079A            __CFG_BOREN$OFF 0000  
         __end_of_spiInit 079A           __end_of_spiRead 0784                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FA  
            __end_of_main 07FA                    ??_main 0074                    ?_setup 0070  
                  _ANSELH 0189                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000          __end_of_spiWrite 0774                 ??_spiInit 0073  
               ??_spiRead 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 07B4                   ??_setup 0074                __pmaintext 07B4  
 __size_of_spiReceiveWait 0007                   _SSPSTAT 0094                 ?_spiWrite 0070  
                 __ptext1 076E                   __ptext2 077B                   __ptext3 0774  
                 __ptext4 079A                   __ptext5 0784                   _spiInit 0784  
                 _spiRead 077B      end_of_initialization 07FC                 _RCSTAbits 0018  
              ??_spiWrite 0070                 _PORTCbits 0007               spiWrite@dat 0070  
               _TXSTAbits 0098            _spiReceiveWait 0774               _BAUDCTLbits 0187  
     start_initialization 07FA  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 077B  
             __pbssCOMMON 0076                 ___latbits 0002           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0070                  ?_spiRead 0070  
          __size_of_setup 001A      spiInit@sTransmitEdge 0072                  _PIE1bits 008C  
      spiInit@sDataSample 0070          __size_of_spiInit 0016          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0046                  _spiWrite 076E  
            spiInit@sType 0073         spiInit@sClockIdle 0071                _INTCONbits 000B  
        ??_spiReceiveWait 0070  
